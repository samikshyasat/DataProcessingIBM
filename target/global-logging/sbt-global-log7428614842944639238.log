[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Oracle Corporation Java 1.8.0_191)
[debug]       Load.loadUnit: plugins took 176.474257ms
[debug]       Load.loadUnit: defsScala took 0.677769ms
[debug] [Loading] Scanning directory C:\Users\Samikshay\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Samikshay\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 30.875416 ms
[debug]           Load.resolveProject(global-plugins) took 69.758538ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Samikshay\.sbt\1.0\plugins, plugins: List(<none>))) took 188.028311ms
[debug] [Loading] Done in C:\Users\Samikshay\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 229.254217ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.339871ms
[debug]     Load.loadUnit(file:/C:/Users/Samikshay/.sbt/1.0/plugins/, ...) took 419.584259ms
[debug]   Load.apply: load took 871.377368ms
[debug]   Load.apply: resolveProjects took 19.78913ms
[debug]   Load.apply: finalTransforms took 85.174732ms
[debug]   Load.apply: config.delegates took 12.647485ms
[debug]   Load.apply: Def.make(settings)... took 1012.192744ms
[debug]   Load.apply: structureIndex took 226.536823ms
[debug]   Load.apply: mkStreams took 3.093976ms
[info] loading global plugins from C:\Users\Samikshay\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 10468.794581ms
[debug]           Load.loadUnit: plugins took 35.590986ms
[debug]           Load.loadUnit: defsScala took 0.005527ms
[debug] [Loading] Scanning directory C:\Users\Samikshay\IdeaProjects\HelloSpark\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Samikshay\IdeaProjects\HelloSpark\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.507664 ms
[debug]               Load.resolveProject(hellospark-build) took 2.456075ms
[debug]             Load.loadTransitive: finalizeProject(Project(id hellospark-build, base: C:\Users\Samikshay\IdeaProjects\HelloSpark\project, plugins: List(<none>))) took 6.876774ms
[debug] [Loading] Done in C:\Users\Samikshay\IdeaProjects\HelloSpark\project, returning: (hellospark-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 9.82667ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.023684ms
[debug]         Load.loadUnit(file:/C:/Users/Samikshay/IdeaProjects/HelloSpark/project/, ...) took 46.83951ms
[debug]       Load.apply: load took 49.435718ms
[debug]       Load.apply: resolveProjects took 0.162239ms
[debug]       Load.apply: finalTransforms took 16.506467ms
[debug]       Load.apply: config.delegates took 0.660796ms
[debug]       Load.apply: Def.make(settings)... took 212.872487ms
[debug]       Load.apply: structureIndex took 52.552195ms
[debug]       Load.apply: mkStreams took 0.002763ms
[info] loading project definition from C:\Users\Samikshay\IdeaProjects\HelloSpark\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1154.889059ms
[debug]     Load.loadUnit: defsScala took 0.005527ms
[debug] [Loading] Scanning directory C:\Users\Samikshay\IdeaProjects\HelloSpark
[debug]       Load.loadUnit: mkEval took 11.839452ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Samikshay\IdeaProjects\HelloSpark, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.783587 ms
[info] loading settings for project hellospark from build.sbt ...
[debug]         Load.resolveProject(hellospark) took 5.160837ms
[debug]       Load.loadTransitive: finalizeProject(Project(id hellospark, base: C:\Users\Samikshay\IdeaProjects\HelloSpark, plugins: List(<none>))) took 10.077329ms
[debug] [Loading] Done in C:\Users\Samikshay\IdeaProjects\HelloSpark, returning: (hellospark)
[debug]     Load.loadUnit: loadedProjectsRaw took 410.708125ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.990448ms
[debug]   Load.loadUnit(file:/C:/Users/Samikshay/IdeaProjects/HelloSpark/, ...) took 1587.046591ms
[debug] Load.apply: load took 1589.098452ms
[debug] Load.apply: resolveProjects took 0.244739ms
[debug] Load.apply: finalTransforms took 13.720785ms
[debug] Load.apply: config.delegates took 0.495004ms
[debug] Load.apply: Def.make(settings)... took 133.314912ms
[debug] Load.apply: structureIndex took 48.73387ms
[debug] Load.apply: mkStreams took 0.003553ms
[info] set current project to HelloSpark (in build file:/C:/Users/Samikshay/IdeaProjects/HelloSpark/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-dcdfd5a02cc2753d9eb2
[debug] Writing bsp connection file
[info] started sbt server
